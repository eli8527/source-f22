@use "utilities" as *;



%--outline {
	border-radius: calc(var(--link--enlargement) / 4);
	outline-color: var(--link--color);
	outline-style: solid;
	outline-width: var(--link--outline--override, var(--link--outline));
}

%--focus {
	-webkit-tap-highlight-color: var(--link--highlight);
	cursor:                     pointer;
	transition-duration:        var(--link--hover--transition);
	transition-property:        filter;
	transition-timing-function: linear;


	&:active {
		background-color: var(--link--highlight);
		border-radius:    calc(var(--link--enlargement) / 2);
	}

	&:focus {
		outline: none;
		z-index: 1;

		&:focus-visible:not(:disabled) {
			@extend %--outline;
		}
	}

	@include hover {
		$thanksNex3: 'opacity(var(--link--hover--opacity))'; // SCSS thinks `opacity` is its internal color function.

		filter: unquote($thanksNex3);
	}
}



%link--enlargement {
	margin:  calc(var(--link--enlargement) * -1);
	padding: var(--link--enlargement);
}

%link--enlargement--text {
	border-bottom-width: calc(var(--link--enlargement) / 2);
	border-color:        transparent;
	border-left-width:   var(--link--enlargement);
	border-right-width:  var(--link--enlargement);
	border-style:        solid;
	border-top-width:    calc(var(--link--enlargement) / 2);
	margin-bottom:       calc(-1 * var(--link--enlargement) / 2);
	margin-left:         calc(-1 * var(--link--enlargement));
	margin-right:        calc(-1 * var(--link--enlargement));
	margin-top:          calc(-1 * var(--link--enlargement) / 2);
}



%link--element {
	@extend %--focus;
	@extend %link--enlargement;

	display:        flex;
	flex-direction: column;
	width:          fit-content;
}

%link--text {
	@extend %--focus;
	@extend %link--enlargement--text;
}
